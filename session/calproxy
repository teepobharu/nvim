let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
let SessionLoad =  1 
silent only
silent tabonly
cd ~/AgodaGit/tools/calculon-helper
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +13 sample/request/calculon_run.json
badd +18 tsconfig.json
badd +149 src/endpoint/types/createExperiment.ts
badd +1 sample/response/20LIVE_Add.json
badd +18 .env
badd +4 result/saveRun/20240604/08_00/20240604_20-saveRun.json
badd +1 result/api/calculon_run/20240604_20-response.json
badd +1 src/external/mock/calculonGQL_getExperimentById.ts
badd +8 sample/response/LIVE20.csv
badd +24 README.md
badd +1 .gitignore
argglobal
%argdel
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit sample/response/LIVE20.csv
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 100 + 101) / 202)
exe 'vert 2resize ' . ((&columns * 101 + 101) / 202)
tcd ~/AgodaGit/tools/calculon-helper
argglobal
balt ~/AgodaGit/tools/calculon-helper/sample/response/20LIVE_Add.json
setlocal fdm=expr
setlocal fde=v:lua.require'lazyvim.util'.ui.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 14 - ((13 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 14
normal! 023|
wincmd w
argglobal
if bufexists(fnamemodify("~/AgodaGit/tools/calculon-helper/README.md", ":p")) | buffer ~/AgodaGit/tools/calculon-helper/README.md | else | edit ~/AgodaGit/tools/calculon-helper/README.md | endif
if &buftype ==# 'terminal'
  silent file ~/AgodaGit/tools/calculon-helper/README.md
endif
balt ~/AgodaGit/tools/calculon-helper/src/external/mock/calculonGQL_getExperimentById.ts
setlocal fdm=expr
setlocal fde=v:lua.require'lazyvim.util'.ui.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 24 - ((23 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 24
normal! 016|
wincmd w
exe 'vert 1resize ' . ((&columns * 100 + 101) / 202)
exe 'vert 2resize ' . ((&columns * 101 + 101) / 202)
tabnext
edit ~/AgodaGit/tools/calculon-helper/.gitignore
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
tcd ~/AgodaGit/tools/calculon-helper
argglobal
setlocal fdm=expr
setlocal fde=v:lua.require'lazyvim.util'.ui.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("~/AgodaGit/tools/calculon-helper/sample/response/20LIVE_Add.json", ":p")) | buffer ~/AgodaGit/tools/calculon-helper/sample/response/20LIVE_Add.json | else | edit ~/AgodaGit/tools/calculon-helper/sample/response/20LIVE_Add.json | endif
if &buftype ==# 'terminal'
  silent file ~/AgodaGit/tools/calculon-helper/sample/response/20LIVE_Add.json
endif
setlocal fdm=expr
setlocal fde=v:lua.require'lazyvim.util'.ui.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 26) / 52)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
wincmd w
wincmd =
tabnext 2
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
