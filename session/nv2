let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
let Lf_StlColorscheme = "everforest"
let VM_Insert_hl = "VMCursor"
let Lf_PopupColorscheme = "everforest"
let VM_Mono_hl = "VMCursor"
let NetrwTopLvlMenu = "Netrw."
let VM_Extend_hl = "Visual"
let NetrwMenuPriority =  80 
let VM_Cursor_hl = "VMCursor"
silent only
silent tabonly
cd ~/dotfiles/.config/nvim2_jelly_lzmigrate
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +362 lua/plugins/extras/snacks.lua
badd +27 lua/core/myEditor.lua
badd +43 lua/utils/lsp.lua
badd +102 lua/core/lspconfig.lua
badd +2 lua/utils/toggle.lua
badd +20 /opt/homebrew/Cellar/neovim/0.11.1/share/nvim/runtime/lua/vim/_meta.lua
badd +44 /opt/homebrew/Cellar/neovim/0.11.1/share/nvim/runtime/lua/vim/keymap.lua
badd +29 ~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/plugins/vscode.lua
badd +1 ~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/core/treesitter.lua
argglobal
%argdel
edit ~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/core/treesitter.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 119 + 119) / 238)
exe 'vert 2resize ' . ((&columns * 118 + 119) / 238)
argglobal
balt lua/core/myEditor.lua
setlocal foldmethod=expr
setlocal foldexpr=v:lua.vim.treesitter.foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=99
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
1
sil! normal! zo
12
sil! normal! zo
let s:l = 1 - ((0 * winheight(0) + 33) / 67)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 08|
wincmd w
argglobal
if bufexists(fnamemodify("~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/plugins/vscode.lua", ":p")) | buffer ~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/plugins/vscode.lua | else | edit ~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/plugins/vscode.lua | endif
if &buftype ==# 'terminal'
  silent file ~/dotfiles/.config/nvim2_jelly_lzmigrate/lua/plugins/vscode.lua
endif
balt lua/utils/toggle.lua
setlocal foldmethod=expr
setlocal foldexpr=v:lua.vim.treesitter.foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=99
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 29 - ((28 * winheight(0) + 33) / 67)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 29
normal! 03|
wincmd w
exe 'vert 1resize ' . ((&columns * 119 + 119) / 238)
exe 'vert 2resize ' . ((&columns * 118 + 119) / 238)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
