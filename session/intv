let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
let Lf_StlColorscheme = "everforest"
let VM_Insert_hl = "VMCursor"
let Lf_PopupColorscheme = "everforest"
let VM_Mono_hl = "VMCursor"
let NetrwTopLvlMenu = "Netrw."
let VM_Extend_hl = "Visual"
let NetrwMenuPriority =  80 
let VM_Cursor_hl = "VMCursor"
silent only
silent tabonly
cd ~/Personal/mynotes
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +133 ~/Personal/mynotes/study/Programming/algorithms/agoda_interview/code_signals/hackerrank/easy/maxProfit.py
badd +55 ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py
argglobal
%argdel
edit ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt ~/Personal/mynotes/study/Programming/algorithms/agoda_interview/code_signals/hackerrank/easy/maxProfit.py
setlocal fdm=expr
setlocal fde=v:lua.require'utils.ui'.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
14
normal! zo
21
normal! zo
37
normal! zo
45
normal! zo
55
normal! zo
55
normal! zo
let s:l = 55 - ((31 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 55
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py", ":p")) | buffer ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py | else | edit ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py | endif
if &buftype ==# 'terminal'
  silent file ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py
endif
balt ~/Personal/mynotes/study/Programming/algorithms/agoda_interview/code_signals/hackerrank/easy/maxProfit.py
setlocal fdm=expr
setlocal fde=v:lua.require'utils.ui'.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 25 - ((23 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 25
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py", ":p")) | buffer ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py | else | edit ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py | endif
if &buftype ==# 'terminal'
  silent file ~/Personal/mynotes/study/Programming/algorithms/practice/nQueen.py
endif
balt ~/Personal/mynotes/study/Programming/algorithms/agoda_interview/code_signals/hackerrank/easy/maxProfit.py
setlocal fdm=expr
setlocal fde=v:lua.require'utils.ui'.foldexpr()
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
14
normal! zo
15
normal! zo
16
normal! zo
21
normal! zo
25
normal! zo
26
normal! zo
37
normal! zo
45
normal! zo
47
normal! zc
55
normal! zo
55
normal! zo
let s:l = 47 - ((29 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 47
normal! 0
wincmd w
3wincmd w
wincmd =
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
